# screen like C-a vs C-b
unbind-key C-b
set-option -g prefix C-a

# screen like C-a a vs C-b l
bind-key C-a last-window
#bind a send-prefix
bind-key a send-prefix

# large history
set-option -g history-limit 100000

# automatically set window title
set -g set-titles on
#set -g set-titles-string '#S:#I.#P #W'
#setw -g automatic-rename

# window splitting
unbind %
bind | split-window -h
bind - split-window -v

# pane movement
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# window movement
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# default terminal
#set -g default-terminal "screen-256color"
# set -g default-terminal "xterm"

# terminal locking - apt-get install vlock
unbind ^X
bind ^X lock-server
#set -g lock-command vlock
#set -g lock-after-time 1200
#bind ^X lock-command
set -g lock-after-time 0
set -g lock-command "bashlock"
set -g lock-after-time 1800

# 0 is too far from 1
set -g base-index 1

# notify when other windows have activity
setw -g monitor-activity on
set -g visual-activity on

# for vim
setw -g xterm-keys on

# pane movement
bind-key J command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key S command-prompt -p "send pane to:"  "join-pane -t '%%'"

# open new window in current dir
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
bind C new-window

# `+r reloads the configuration, handy
#bind r source-file ~/.tmux.conf
bind r source-file ~/.tmux.conf \; display-message "Configuration reloaded."

# create an environment that zsh can make sense of
set-environment -g INSCREEN yes
set-environment -g TMUX_TITLE yes

# brew install reattach-to-user-namespace
# Use vim keybindings in copy mode
#setw -g mode-keys vi
#set -g @shell_mode 'vi'

# Use vim keybindings in copy mode
#setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
#bind-key -t vi-copy v begin-selection
#bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
#unbind -t vi-copy Enter
#bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "pbcopy"

# copy/paste
unbind [
bind Escape copy-mode

# copy
set -g @yank_selection 'primary'

# colors
#source ~/.vim/bundle/powerline/powerline/bindings/tmux/powerline.conf
set-option -g default-terminal "screen-256color"

# current working directory window name
# set -g status-left "#{pane_current_path}"
# setw -g window-status-format "#{pane_current_path}".

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
